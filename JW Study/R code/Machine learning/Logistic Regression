# data
german <- read.csv('German_credit.csv')
colnames(german)
table(german$Credit_status)

# 층화 추출
library(sampling)
stratified_sampling <- strata(german, stratanames = c("Credit_status"), size =c(300,300),
                              method="srswor")
st_data <- getdata(german, stratified_sampling)
table(st_data$Credit_status)

# data partition
library(caret)
train <- createDataPartition(st_data$ID, p=0.7, list=FALSE)
td <- st_data[train,]
vd <- st_data[-train,]

colnames(td)
td <- td[, -c(1,23,24,25)]
vd <- vd[, -c(1,23,24,25)]

# 범주화
td$Job <- as.factor(td$Job)
td$Other_debtors_guarantors <- as.factor(td$Other_debtors_guarantors)
td$Other_installment_plan <- as.factor(td$Other_installment_plan)
td$Personal_status___sex <- as.factor(td$Personal_status___sex)
td$Property <- as.factor(td$Property)
td$Purpose <- as.factor(td$Purpose)
td$Saving_accout <- as.factor(td$Saving_accout)
td$Present_employment <- as.factor(td$Present_employment)

vd$Job <- as.factor(vd$Job)
vd$Other_debtors_guarantors <- as.factor(vd$Other_debtors_guarantors)
vd$Other_installment_plan <- as.factor(vd$Other_installment_plan)
vd$Personal_status___sex <- as.factor(vd$Personal_status___sex)
vd$Property <- as.factor(vd$Property)
vd$Purpose <- as.factor(vd$Purpose)
vd$Saving_accout <- as.factor(vd$Saving_accout)
vd$Present_employment <- as.factor(vd$Present_employment)

# Logistic regression
log_reg <- glm(Credit_status ~., data=td, family=binomial(link='logit'))
summary(log_reg)
log_reg$fitted.values <- ifelse(log_reg$fitted.values > 0.8,'Y','N')
misclassification_train <- mean(log_reg$fitted.values != td$Credit_status)
misclassification_train

# ROC
library(ROCR)
log_reg <- glm(Credit_status ~., data=td, family=binomial(link='logit'))

p <- log_reg$fitted.values
pr <- prediction(p, td$Credit_status)
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf)

# AUC
auc <- performance(pr, measure = "auc")
auc <- auc@y.values[[1]]
auc

# validation
fitted.results <- predict(log_reg,newdata=vd,type='response')
fitted.results <- ifelse(fitted.results > 0.8,'Y','N')
misclassification_valid <- mean(fitted.results != vd$Credit_status)
misclassification_valid


